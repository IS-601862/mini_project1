Git basic commands and description

Repository 
Repository is the storage location or place where your work is stored when you do some work.
Example: when you do some work, you either store it in your local storage device like hard drive in PC or thumb drive or publish on site which is stored in cloud to share. Git also has local and public location to store work, and its called repository.

Clone
Clone as it sounds, is the copy of your local commit or local work, commonly used to share your local work to public/remote repository. 
To use this command simply type "git clone" and it will make copy of your local work.
Example. When you upload your music file from computer to either cloud or your phone device, you are uploading a copy of your file. It is not realtime file it-self, it is copy, so once you upload the file and then make change to it in your local computer it will not change "clone" file in remote, becuase it is not actual file it-self but its copy. 

Frok
Fork is similar to Clone, however it is to test or experiment on remote repository (github) rather then local, where peopel can share and edit files to collaborate.
To do fork, you use the git clone command with your github link, which allows you to share your clone or in this case, fork on remote repository rather then your local. 
Example: A google drive document is perfect example for fork. Local word file works like clone, while google drive file works like fork, where it is stored remotely and all the members has access to it and can edit it. 

Branch
Branches are basically pointers showing what is involved in your current work, or what are the parent commit of your current commit. 
To branch, the command is "git brnach NAME-OF-BRANCH". Include what you want to name the branch instead of "NAME-OF-BRANCH".
Example: If a food item such as Cake has multiple steps, branches simply shows what have been done before or what work was related to get to point where you are not. For example, before putting cake in oven, you added eggs, flour, and coco; so each item is a commit and there would be arrow showing step by step whats added, which is branching.

Commit
Commit is basically the work done in git. Any work you do in git is known as git commit. It is stored in the repository. 
to commit, simply use the command "git commit" and then any additional instruction for work. 
Example: any work you do, can be sensed by others. Git commit is simply for repository to know you did the work so it can store it, which other can see.

Merge 
As it sounds, merge is mixing two commits or work into one work. In git language, two or more parent commints, branching into one. 
To use merge, simply select (checkout** will go over soon) one commit, and type command "git merge OTHER-COMMIT-NAME", where OTHER-COMMIT-NAME is the other commit you want to merge your currently selected commit.
Example: If you want to make chocolate milk, either select coco or milk, in this case lets do milk and simly do "git merge coco" and now you have chocolate milk, which has branches (parent commits) from coco and milk commits.   
